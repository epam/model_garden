"""
Django settings for model_garden project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

import environ

env = environ.Env()
dot_env_file_path = '.env'
if os.path.exists(dot_env_file_path):
  environ.Env.read_env(dot_env_file_path)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# A key used by Django for an encryption.
SECRET_KEY = env('DJANGO_SECRET_KEY', default='None')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = env('ALLOWED_HOSTS', cast=list, default=['*'])

CORS_ORIGIN_WHITELIST = env(
  var='CORS_ORIGIN_WHITELIST',
  cast=list,
  default=[
    'http://localhost',
    'http://127.0.0.1',
    'http://localhost:4200',
    'http://127.0.0.1:4200',
  ],
)

# Application definition

INSTALLED_APPS = [
  'corsheaders',
  'django.contrib.admin',
  'django.contrib.auth',
  'django.contrib.contenttypes',
  'django.contrib.sessions',
  'django.contrib.messages',
  'django.contrib.staticfiles',
  'django_extensions',
  'django_filters',
  'model_garden',
  'rest_framework',
]

MIDDLEWARE = [
  'corsheaders.middleware.CorsMiddleware',
  'django.middleware.security.SecurityMiddleware',
  'django.contrib.sessions.middleware.SessionMiddleware',
  'django.middleware.common.CommonMiddleware',
  'django.middleware.csrf.CsrfViewMiddleware',
  'django.contrib.auth.middleware.AuthenticationMiddleware',
  'django.contrib.messages.middleware.MessageMiddleware',
  'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
  'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
  'DEFAULT_PAGINATION_CLASS': 'model_garden.pagination.StandardResultsSetPagination',
  'PAGE_SIZE': 50,
}


ROOT_URLCONF = 'model_garden.urls'

TEMPLATES = [
  {
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [],
    'APP_DIRS': True,
    'OPTIONS': {
      'context_processors': [
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
      ],
    },
  },
]

WSGI_APPLICATION = 'model_garden.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
  'default': {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': env('DJANGO_DB_NAME', default='model_garden'),
    'USER': env('DJANGO_DB_USER', default='postgres'),
    'PASSWORD': env('DJANGO_DB_PASSWORD', default=''),
    'HOST': env("DJANGO_DB_HOST", default="localhost"),
    'PORT': env("DJANGO_DB_PORT", cast=int, default=5432),
    'ATOMIC_REQUESTS': True,
  },
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
  {
    'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
  },
]

LOGGING = {
  'version': 1,
  'disable_existing_loggers': False,
  'formatters': {
    'simple': {
      'format': '[{asctime}] {name}: {message}',
      'style': '{',
    },
  },
  'handlers': {
    'console': {
      'class': 'logging.StreamHandler',
      'formatter': 'simple',
    },
  },
  'loggers': {
    'django': {
      'handlers': ['console'],
      'propagate': True,
    },
    'model_garden': {
      'handlers': ['console'],
      'level': 'INFO',
      'propagate': True,
    },
  },
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# SUPER USER
DJANGO_ROOT_USER = env('DJANGO_ROOT_USER', default=None)
DJANGO_ROOT_EMAIL = env('DJANGO_ROOT_EMAIL', default=None)
DJANGO_ROOT_PASSWORD = env('DJANGO_ROOT_PASSWORD', default=None)

# AWS
AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID', default=None)
AWS_SECRET_KEY = env('AWS_SECRET_KEY', default=None)

# CVAT
CVAT_HOST = env('CVAT_HOST', default='localhost')
CVAT_PORT = env('CVAT_PORT', cast=int, default=8080)
CVAT_API_VERSION = env('CVAT_API_VERSION', default='v1')
CVAT_API_URL = f"http://{CVAT_HOST}:{CVAT_PORT}/api/{CVAT_API_VERSION}"
CVAT_PUBLIC_HOST = env('CVAT_PUBLIC_HOST', default=CVAT_HOST)
CVAT_PUBLIC_PORT = env('CVAT_PUBLIC_PORT', default=CVAT_PORT)
CVAT_PUBLIC_URL = f"http://{CVAT_PUBLIC_HOST}:{CVAT_PUBLIC_PORT}"
CVAT_ROOT_USER_NAME = env('CVAT_ROOT_USER_NAME', default='')
CVAT_ROOT_USER_PASSWORD = env('CVAT_ROOT_USER_PASSWORD', default='')

# Task statuses worker
TASK_STATUSES_WORKER_CHUNK_SIZE = env('TASK_STATUSES_WORKER_CHUNK_SIZE', cast=int, default=5)
TASK_STATUSES_WORKER_PERIOD = env('TASK_STATUSES_WORKER_PERIOD', cast=int, default=10)
TASK_STATUSES_WORKER_TIMEOUT = env('TASK_STATUSES_WORKER_TIMEOUT', cast=int, default=60)
