stages:
  - test
  - build
  - push

.setup_python_env: &setup_python_env
  before_script:
  - cd backend
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt -r test-requirements.txt

lint:
  stage: test
  image: python:3.8
  <<: *setup_python_env
  script:
    - pip install flake8
    - flake8 .
  cache:
    paths:
      - backend/venv/

test:
  stage: test
  image: python:3.8
  services:
    - postgres:12.2-alpine
  variables:
    POSTGRES_DB: garden
    POSTGRES_HOST_AUTH_METHOD: trust
    POSTGRES_PASSWORD: ""
    POSTGRES_USER: postgres
  <<: *setup_python_env
  script:
    - pytest -v --cov=model_garden --cov-report=term-missing --no-cov-on-fail tests
  cache:
    paths:
      - backend/venv/

backend:
  stage: build
  image: docker
  services:
    - docker:dind
  variables:
    AWS_DEFAULT_REGION: eu-central-1
    DOCKER_HOST: tcp://localhost:2375/
    REPOSITORY_URL: local/model_garden_backend
  before_script:
    - apk add --no-cache curl jq python3 py-pip
    - pip install awscli
    - cd backend
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - echo $CI_COMMIT_TAG
    - docker build --network host -t $REPOSITORY_URL:latest .
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$CI_COMMIT_TAG
    - docker images
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$CI_COMMIT_TAG
    - aws ecs update-service --cluster model-garden --service model-garden-backend
    - aws ecs list-tasks --cluster model-garden --service model-garden-backend | jq -r ".taskArns[]" | awk 'END { if (NR==0 || $0=="")  exit 0; print "aws ecs stop-task --cluster model-garden --task \""$0"\"";}' | sh
  only:
    - master

backend dev:
  stage: build
  image: docker
  services:
    - docker:dind
  variables:
    AWS_DEFAULT_REGION: eu-central-1
    DOCKER_HOST: tcp://localhost:2375/
    REPOSITORY_URL: local/model_garden_backend
  before_script:
    - apk add --no-cache curl jq python3 py-pip
    - pip install awscli
    - cd backend
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - echo $CI_COMMIT_SHORT_SHA
    - docker build --network host -t $REPOSITORY_URL:latest-dev .
    - docker tag $REPOSITORY_URL:latest-dev $REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
    - docker images
    - docker push $REPOSITORY_URL:latest-dev
    - docker push $REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
    - aws ecs update-service --cluster model-garden-dev --service model-garden-backend-dev
    - aws ecs list-tasks --cluster model-garden-dev --service model-garden-backend-dev | jq -r ".taskArns[]" | awk 'END { if (NR==0 || $0=="")  exit 0; print "aws ecs stop-task --cluster model-garden-dev --task \""$0"\"";}' | sh
  only:
    - develop

frontend:
  stage: build
  image: docker
  services:
    - docker:dind
  variables:
    AWS_DEFAULT_REGION: eu-central-1
    DOCKER_HOST: tcp://localhost:2375/
    REPOSITORY_URL: local/model_garden_frontend
  before_script:
    - apk add --no-cache curl jq python3 py-pip
    - pip install awscli
    - cd frontend
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - echo $CI_COMMIT_TAG
    - docker build --network host -t $REPOSITORY_URL:latest .
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$CI_COMMIT_TAG
    - docker images
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$CI_COMMIT_TAG
    - aws ecs update-service --cluster model-garden --service model-garden-frontend
    - aws ecs list-tasks --cluster model-garden --service model-garden-frontend | jq -r ".taskArns[]" | awk 'END { if (NR==0 || $0=="")  exit 0; print "aws ecs stop-task --cluster model-garden --task \""$0"\"";}' | sh
  only:
    - master

frontend dev:
  stage: build
  image: docker
  services:
    - docker:dind
  variables:
    AWS_DEFAULT_REGION: eu-central-1
    DOCKER_HOST: tcp://localhost:2375/
    REPOSITORY_URL: local/model_garden_frontend
  before_script:
    - apk add --no-cache curl jq python3 py-pip
    - pip install awscli
    - cd frontend
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - echo $CI_COMMIT_SHORT_SHA
    - docker build --network host -t $REPOSITORY_URL:latest-dev .
    - docker tag $REPOSITORY_URL:latest-dev $REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
    - docker images
    - docker push $REPOSITORY_URL:latest-dev
    - docker push $REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
    - aws ecs update-service --cluster model-garden-dev --service model-garden-frontend-dev
    - aws ecs list-tasks --cluster model-garden-dev --service model-garden-frontend-dev |  jq -r ".taskArns[]" | awk 'END { if (NR==0 || $0=="")  exit 0; print "aws ecs stop-task --cluster model-garden-dev --task \""$0"\"";}' | sh
  only:
    - develop
